
c:\sg\terraform\scripts>
c:\sg\terraform\scripts>
c:\sg\terraform\scripts>
c:\sg\terraform\scripts>terraform plan
Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

data.aws_ami.ubuntu: Refreshing state...

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.ec2_devops_public_ip will be created
  + resource "aws_eip" "ec2_devops_public_ip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "Name" = "ec2_devops_public_ip"
        }
      + vpc               = true
    }

  # aws_instance.ec2_devops will be created
  + resource "aws_instance" "ec2_devops" {
      + ami                          = "ami-0bf3d772090752dc5"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t2.micro"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "kp_devops"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = (known after apply)
      + tags                         = {
          + "Name" = "ec2_devops"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = (known after apply)
      + vpc_security_group_ids       = (known after apply)

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "gw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_key_pair.kp_devops will be created
  + resource "aws_key_pair" "kp_devops" {
      + fingerprint = (known after apply)
      + id          = (known after apply)
      + key_name    = "kp_devops"
      + key_pair_id = (known after apply)
      + public_key  = "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAtXEAk2b9LnZzH0Xf4T0Ur68OmGhg1dF0G1kszMxbt4eYLzi//rLzDZHdgnn00UwIo8/tfW/P5NGT5ZkilRm+9X0E+6ViSbIkhG/t5OIXhLOzr6Kr/scxSik7dM0tqZPiIcHwrkNT1uSl3WhhZJg/rjaGNQrRZ2DGF74rPowRNfD9j6kT0crdNx/zSBdT51cbhEcxmMsHvCnaG2FBodx+Hnf8+PZuGtxKdrz6G9TMWkHRiu1x2XELtjHftsJdWBToWo5L4ndkW84n8lpEo6N8XwFsa9lipjSCL9pc2SqVBcWNXlan2k/1Zlj1oI9oRnuObFYZpBHBnD8xwX0VY/BVBQ== rsa-key-20200125"
    }

  # aws_route_table.route_devops will be created
  + resource "aws_route_table" "route_devops" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "route_devops"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.route_asso_devops will be created
  + resource "aws_route_table_association" "route_asso_devops" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.sg_devops will be created
  + resource "aws_security_group" "sg_devops" {
      + arn                    = (known after apply)
      + description            = "Allow SSH and HTTP Traffic"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = "sg_devops"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.sub_public_devops will be created
  + resource "aws_subnet" "sub_public_devops" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.17.17.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sub_public_devops"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.vpc_devops will be created
  + resource "aws_vpc" "vpc_devops" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "172.17.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = (known after apply)
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "vpc_devops"
        }
    }

Plan: 9 to add, 0 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.


c:\sg\terraform\scripts>terraform apply
data.aws_ami.ubuntu: Refreshing state...

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.ec2_devops_public_ip will be created
  + resource "aws_eip" "ec2_devops_public_ip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "Name" = "ec2_devops_public_ip"
        }
      + vpc               = true
    }

  # aws_instance.ec2_devops will be created
  + resource "aws_instance" "ec2_devops" {
      + ami                          = "ami-0bf3d772090752dc5"
      + arn                          = (known after apply)
      + associate_public_ip_address  = (known after apply)
      + availability_zone            = (known after apply)
      + cpu_core_count               = (known after apply)
      + cpu_threads_per_core         = (known after apply)
      + get_password_data            = false
      + host_id                      = (known after apply)
      + id                           = (known after apply)
      + instance_state               = (known after apply)
      + instance_type                = "t2.micro"
      + ipv6_address_count           = (known after apply)
      + ipv6_addresses               = (known after apply)
      + key_name                     = "kp_devops"
      + network_interface_id         = (known after apply)
      + password_data                = (known after apply)
      + placement_group              = (known after apply)
      + primary_network_interface_id = (known after apply)
      + private_dns                  = (known after apply)
      + private_ip                   = (known after apply)
      + public_dns                   = (known after apply)
      + public_ip                    = (known after apply)
      + security_groups              = (known after apply)
      + source_dest_check            = true
      + subnet_id                    = (known after apply)
      + tags                         = {
          + "Name" = "ec2_devops"
        }
      + tenancy                      = (known after apply)
      + volume_tags                  = (known after apply)
      + vpc_security_group_ids       = (known after apply)

      + ebs_block_device {
          + delete_on_termination = (known after apply)
          + device_name           = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }

      + ephemeral_block_device {
          + device_name  = (known after apply)
          + no_device    = (known after apply)
          + virtual_name = (known after apply)
        }

      + network_interface {
          + delete_on_termination = (known after apply)
          + device_index          = (known after apply)
          + network_interface_id  = (known after apply)
        }

      + root_block_device {
          + delete_on_termination = (known after apply)
          + encrypted             = (known after apply)
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = (known after apply)
          + volume_type           = (known after apply)
        }
    }

  # aws_internet_gateway.gw will be created
  + resource "aws_internet_gateway" "gw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "gw"
        }
      + vpc_id   = (known after apply)
    }

  # aws_key_pair.kp_devops will be created
  + resource "aws_key_pair" "kp_devops" {
      + fingerprint = (known after apply)
      + id          = (known after apply)
      + key_name    = "kp_devops"
      + key_pair_id = (known after apply)
      + public_key  = "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAtXEAk2b9LnZzH0Xf4T0Ur68OmGhg1dF0G1kszMxbt4eYLzi//rLzDZHdgnn00UwIo8/tfW/P5NGT5ZkilRm+9X0E+6ViSbIkhG/t5OIXhLOzr6Kr/scxSik7dM0tqZPiIcHwrkNT1uSl3WhhZJg/rjaGNQrRZ2DGF74rPowRNfD9j6kT0crdNx/zSBdT51cbhEcxmMsHvCnaG2FBodx+Hnf8+PZuGtxKdrz6G9TMWkHRiu1x2XELtjHftsJdWBToWo5L4ndkW84n8lpEo6N8XwFsa9lipjSCL9pc2SqVBcWNXlan2k/1Zlj1oI9oRnuObFYZpBHBnD8xwX0VY/BVBQ== rsa-key-20200125"
    }

  # aws_route_table.route_devops will be created
  + resource "aws_route_table" "route_devops" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "route_devops"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.route_asso_devops will be created
  + resource "aws_route_table_association" "route_asso_devops" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_security_group.sg_devops will be created
  + resource "aws_security_group" "sg_devops" {
      + arn                    = (known after apply)
      + description            = "Allow SSH and HTTP Traffic"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 443
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 443
            },
        ]
      + name                   = "sg_devops"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + vpc_id                 = (known after apply)
    }

  # aws_subnet.sub_public_devops will be created
  + resource "aws_subnet" "sub_public_devops" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = (known after apply)
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.17.17.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sub_public_devops"
        }
      + vpc_id                          = (known after apply)
    }

  # aws_vpc.vpc_devops will be created
  + resource "aws_vpc" "vpc_devops" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "172.17.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = (known after apply)
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = (known after apply)
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "vpc_devops"
        }
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_key_pair.kp_devops: Creating...
aws_vpc.vpc_devops: Creating...
aws_key_pair.kp_devops: Creation complete after 2s [id=kp_devops]
aws_vpc.vpc_devops: Still creating... [10s elapsed]
aws_vpc.vpc_devops: Creation complete after 13s [id=vpc-018bff10162cd7b9b]
aws_internet_gateway.gw: Creating...
aws_subnet.sub_public_devops: Creating...
aws_security_group.sg_devops: Creating...
aws_subnet.sub_public_devops: Creation complete after 5s [id=subnet-0593a51929578ea40]
aws_internet_gateway.gw: Creation complete after 7s [id=igw-0bcf2646f6afec34d]
aws_route_table.route_devops: Creating...
aws_security_group.sg_devops: Creation complete after 10s [id=sg-09ea78748cd618cbc]
aws_instance.ec2_devops: Creating...
aws_route_table.route_devops: Creation complete after 6s [id=rtb-003277aac91ff6d92]
aws_route_table_association.route_asso_devops: Creating...
aws_route_table_association.route_asso_devops: Creation complete after 1s [id=rtbassoc-031f6557820b14892]
aws_instance.ec2_devops: Still creating... [10s elapsed]
aws_instance.ec2_devops: Still creating... [20s elapsed]
aws_instance.ec2_devops: Still creating... [30s elapsed]
aws_instance.ec2_devops: Still creating... [40s elapsed]
aws_instance.ec2_devops: Creation complete after 47s [id=i-092b354ddc0ed8099]
aws_eip.ec2_devops_public_ip: Creating...
aws_eip.ec2_devops_public_ip: Creation complete after 8s [id=eipalloc-03b7ca2c886eafc93]

Apply complete! Resources: 9 added, 0 changed, 0 destroyed.

Outputs:

instance_public_ip = 3.131.0.222

c:\sg\terraform\scripts>
